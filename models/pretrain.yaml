train:
  train_subs: [1,2,3,4,5,6,7,8] # subjects to train
  val_subs: [1,2,5,7] # subjects to validate
  gpu_ids: [0,1,2,3,4,5]
  learning_rate: 0.0001 
  weight_decay: 0.01 
  batch_size: 16
  accum_grad: 1
  precision: "bf16" # train at this precision（"bf16", "fp16", "fp32"）
  max_epochs: 100 # max epoch to train the model without mask

  model_name: '' # dir to write results (set '' to use default name "sub_{}_mask_{}")
  outdir: './results' # root dir to write results to
  sd21_path: './ckpt/SD21/control_sd21_ini.ckpt' # path to stable diffussion 2.1
  checkpoint_path: '' # path to pretrained multi-subject fmri-to-image model

  val_data_fraction: 0.25 # validate using part of the val dataset
  val_scale: 5.0 # validate using this unconditional guidance scale (set to 0 to reduce val time)
  val_ddim_steps: 20 # Set to 20 to reduce val time
  check_val_every_n_epoch: 1 # perform validation every n epoch
  save_interval: 10  # If > 0, save intermediate ckpt every n epoch

  mask_flag: False # If true, mask semantic features with unconditional CLIP embeddings corresponding to empty characters
  mask_rate: 0.05 # rate to mask semantic features

  restore: False # whether to continue learning
  restore_weight: '' # set '' as None

model:
  target: cldm.cldm_fmri_pret.CLDM_for_FMRI
  params:
    linear_start: 0.00085
    linear_end: 0.0120
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: "gt_image"
    cond_stage_key: "txt"
    control_key: "fmri"
    image_size: 64
    channels: 4
    cond_stage_trainable: False
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: False
    only_mid_control: False
    from_scrach: True
    val_perceptual_metrics: True # use LPIPS, EfficientNet_B1 and Inception_V3 for validation
    sem_loss_weight: 0.0

    control_stage_config:
      target: cldm.cldm_fmri_pret.ControlNet
      params:
        use_checkpoint: True
        image_size: 32 # unused
        in_channels: 4
        hint_channels: 3
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_head_channels: 64 # need to fix for flash-attn
        use_spatial_transformer: True
        use_linear_in_transformer: True
        transformer_depth: 1
        context_dim: 1024
        legacy: False

    unet_config:
      target: cldm.cldm_fmri_pret.ControlledUnetModel
      params:
        use_checkpoint: True
        image_size: 32 # unused
        in_channels: 4
        out_channels: 4
        model_channels: 320
        attention_resolutions: [ 4, 2, 1 ]
        num_res_blocks: 2
        channel_mult: [ 1, 2, 4, 4 ]
        num_head_channels: 64 # need to fix for flash-attn
        use_spatial_transformer: True
        use_linear_in_transformer: True
        transformer_depth: 1
        context_dim: 1024
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        embed_dim: 4
        monitor: val/rec_loss
        ddconfig:
          #attn_type: "vanilla-xformers"
          double_z: true
          z_channels: 4
          resolution: 256
          in_channels: 3
          out_ch: 3
          ch: 128
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.0
        lossconfig:
          target: torch.nn.Identity
          
    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenOpenCLIPEmbedder
      params:
        freeze: True
        layer: "penultimate"
